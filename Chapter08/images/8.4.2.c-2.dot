digraph "CFG for '_Z1fi' function" {
	label="CFG for '_Z1fi' function";

	Node0x5636ce9ec750 [shape=record,label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %2, align 4\l  store i32 2, i32* %3, align 4\l  br label %8\l}"];
	Node0x5636ce9ec750 -> Node0x5636cea17100;
	Node0x5636cea17100 [shape=record,label="{%8:\l\l  %9 = load i32, i32* %3, align 4\l  %10 = load i32, i32* %2, align 4\l  %11 = icmp sle i32 %9, %10\l  br i1 %11, label %12, label %19\l|{<s0>T|<s1>F}}"];
	Node0x5636cea17100:s0 -> Node0x5636cea17150;
	Node0x5636cea17100:s1 -> Node0x5636cea171f0;
	Node0x5636cea17150 [shape=record,label="{%12:\l\l  %13 = load i32, i32* %3, align 4\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds [100 x i8], [100 x i8]* @a, i64 0, i64 %14\l  store i8 1, i8* %15, align 1\l  br label %16\l}"];
	Node0x5636cea17150 -> Node0x5636cea171a0;
	Node0x5636cea171a0 [shape=record,label="{%16:\l\l  %17 = load i32, i32* %3, align 4\l  %18 = add nsw i32 %17, 1\l  store i32 %18, i32* %3, align 4\l  br label %8\l}"];
	Node0x5636cea171a0 -> Node0x5636cea17100;
	Node0x5636cea171f0 [shape=record,label="{%19:\l\l  store i32 0, i32* %4, align 4\l  %20 = load i32, i32* %2, align 4\l  %21 = call i32 @_Z4sqrti(i32 %20)\l  store i32 %21, i32* %5, align 4\l  store i32 2, i32* %6, align 4\l  br label %22\l}"];
	Node0x5636cea171f0 -> Node0x5636cea17240;
	Node0x5636cea17240 [shape=record,label="{%22:\l\l  %23 = load i32, i32* %6, align 4\l  %24 = load i32, i32* %5, align 4\l  %25 = icmp sle i32 %23, %24\l  br i1 %25, label %26, label %54\l|{<s0>T|<s1>F}}"];
	Node0x5636cea17240:s0 -> Node0x5636cea17290;
	Node0x5636cea17240:s1 -> Node0x5636cea17510;
	Node0x5636cea17290 [shape=record,label="{%26:\l\l  %27 = load i32, i32* %6, align 4\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds [100 x i8], [100 x i8]* @a, i64 0, i64 %28\l  %30 = load i8, i8* %29, align 1\l  %31 = trunc i8 %30 to i1\l  br i1 %31, label %32, label %50\l|{<s0>T|<s1>F}}"];
	Node0x5636cea17290:s0 -> Node0x5636cea172e0;
	Node0x5636cea17290:s1 -> Node0x5636cea17470;
	Node0x5636cea172e0 [shape=record,label="{%32:\l\l  %33 = load i32, i32* %4, align 4\l  %34 = add nsw i32 %33, 1\l  store i32 %34, i32* %4, align 4\l  %35 = load i32, i32* %6, align 4\l  %36 = mul nsw i32 2, %35\l  store i32 %36, i32* %7, align 4\l  br label %37\l}"];
	Node0x5636cea172e0 -> Node0x5636cea17330;
	Node0x5636cea17330 [shape=record,label="{%37:\l\l  %38 = load i32, i32* %7, align 4\l  %39 = load i32, i32* %2, align 4\l  %40 = icmp sle i32 %38, %39\l  br i1 %40, label %41, label %49\l|{<s0>T|<s1>F}}"];
	Node0x5636cea17330:s0 -> Node0x5636cea17380;
	Node0x5636cea17330:s1 -> Node0x5636cea17420;
	Node0x5636cea17380 [shape=record,label="{%41:\l\l  %42 = load i32, i32* %7, align 4\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds [100 x i8], [100 x i8]* @a, i64 0, i64 %43\l  store i8 0, i8* %44, align 1\l  br label %45\l}"];
	Node0x5636cea17380 -> Node0x5636cea173d0;
	Node0x5636cea173d0 [shape=record,label="{%45:\l\l  %46 = load i32, i32* %6, align 4\l  %47 = load i32, i32* %7, align 4\l  %48 = add nsw i32 %47, %46\l  store i32 %48, i32* %7, align 4\l  br label %37\l}"];
	Node0x5636cea173d0 -> Node0x5636cea17330;
	Node0x5636cea17420 [shape=record,label="{%49:\l\l  br label %50\l}"];
	Node0x5636cea17420 -> Node0x5636cea17470;
	Node0x5636cea17470 [shape=record,label="{%50:\l\l  br label %51\l}"];
	Node0x5636cea17470 -> Node0x5636cea174c0;
	Node0x5636cea174c0 [shape=record,label="{%51:\l\l  %52 = load i32, i32* %6, align 4\l  %53 = add nsw i32 %52, 1\l  store i32 %53, i32* %6, align 4\l  br label %22\l}"];
	Node0x5636cea174c0 -> Node0x5636cea17240;
	Node0x5636cea17510 [shape=record,label="{%54:\l\l  ret void\l}"];
}
